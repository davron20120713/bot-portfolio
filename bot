import sqlite3
from config import DATABASE

skills = [ (_,) for _ in (['Python', 'SQL', 'API', 'Telegram'])]
statuses = [ (_,) for _ in (['На этапе проектирования', 'В процессе разработки', 
                            'Разработан. Готов к использованию.', 'Обновлен', 
                            'Завершен. Не поддерживается'])]

class DB_Manager:
    def __init__(self, database):
        self.database = database

    def create_tables(self):
        with sqlite3.connect(self.database) as conn:
            cursor = conn.cursor()

            cursor.execute("""
                CREATE TABLE IF NOT EXISTS users (
                    user_id INTEGER PRIMARY KEY
                )
            """)

            cursor.execute("""
                CREATE TABLE IF NOT EXISTS status (
                    status_id INTEGER PRIMARY KEY,
                    status_name TEXT NOT NULL
                )
            """)

            cursor.execute("""
                CREATE TABLE IF NOT EXISTS skills (
                    skill_id INTEGER PRIMARY KEY,
                    skill_name TEXT NOT NULL
                )
            """)

            cursor.execute("""
                CREATE TABLE IF NOT EXISTS projects (
                    project_id INTEGER PRIMARY KEY,
                    user_id INTEGER,
                    project_name TEXT NOT NULL,
                    description TEXT,
                    url TEXT,
                    status_id INTEGER,
                    FOREIGN KEY(user_id) REFERENCES users(user_id),
                    FOREIGN KEY(status_id) REFERENCES status(status_id)
                )
            """)

            cursor.execute("""
                CREATE TABLE IF NOT EXISTS project_skills (
                    project_id INTEGER,
                    skill_id INTEGER,
                    PRIMARY KEY (project_id, skill_id),
                    FOREIGN KEY(project_id) REFERENCES projects(project_id),
                    FOREIGN KEY(skill_id) REFERENCES skills(skill_id)
                )
            """)

            conn.commit()

    def __executemany(self, sql, data):
        with sqlite3.connect(self.database) as conn:
            conn.executemany(sql, data)
            conn.commit()

    def __select_data(self, sql, data=tuple()):
        with sqlite3.connect(self.database) as conn:
            cur = conn.cursor()
            cur.execute(sql, data)
            return cur.fetchall()

    def default_insert(self):
        self.__executemany('INSERT INTO skills (skill_name) VALUES (?)', skills)
        self.__executemany('INSERT INTO status (status_name) VALUES (?)', statuses)

if __name__ == '__main__':
    manager = DB_Manager(DATABASE)
    manager.create_tables()
    manager.default_insert()
    print("Таблицы созданы и данные по умолчанию добавлены.")
